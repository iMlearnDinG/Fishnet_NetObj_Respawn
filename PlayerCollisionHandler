using UnityEngine;
using FishNet.Object;

public class PlayerCollisionHandler : NetworkBehaviour
{
    public float forceThreshold = 10f;

    private void OnCollisionEnter(Collision collision)
    {
        if (!IsServer || collision.gameObject.CompareTag("Player") == false)
            return;

        // Calculate the relative velocity of the collision
        Vector3 relativeVelocity = collision.relativeVelocity;
        float collisionForce = relativeVelocity.magnitude;

        Debug.Log($"Collision detected, relative velocity: {relativeVelocity}, force: {collisionForce}");

        // Get the rigidbodies of the colliding players
        Rigidbody hitPlayerRb = collision.rigidbody;
        Rigidbody thisPlayerRb = GetComponent<Rigidbody>();

        // Check if the force of collision exceeds the threshold
        if (hitPlayerRb != null && thisPlayerRb != null && collisionForce > forceThreshold)
        {
            // Calculate the force vectors at the point of impact
            Vector3 thisPlayerForce = thisPlayerRb.GetPointVelocity(collision.contacts[0].point);
            Vector3 hitPlayerForce = hitPlayerRb.GetPointVelocity(collision.contacts[0].point);

            // Compare the magnitude of forces
            if (thisPlayerForce.magnitude > hitPlayerForce.magnitude)
            {
                Debug.Log("This player has exerted a greater force, not despawning.");
            }
            else
            {
                // The other player has exerted a greater force, trigger despawn
                NetworkObject playerNetObj = GetComponent<NetworkObject>();
                if (playerNetObj != null)
                {
                    PlayerRespawnManager respawnManager = FindFirstObjectByType<PlayerRespawnManager>();
                    if (respawnManager != null)
                    {
                        respawnManager.DespawnAndRespawnServerRpc(playerNetObj);
                    }
                    else
                    {
                        Debug.LogError("PlayerRespawnManager not found in the scene.");
                    }
                }
                else
                {
                    Debug.LogError("NetworkObject component not found on this player.");
                }
            }
        }
    }
}
